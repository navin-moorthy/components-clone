# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy:
    name: Deploy
    runs-on: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node JS
        uses: actions/setup-node@v1
        with:
          node-version: "10.x"

      - name: Instal Lerna
        run: |
          yarn global add lerna

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Deps
        run: |
          yarn install
          yarn boot

      - name: Build Docz
        working-directory: ./packages/flash-components-docs
        run: yarn build

      - name: Deploy to Now
        working-directory: ./packages/flash-components-docs/out
        env:
          NOW_TOKEN: ${{ secrets.NOW_TOKEN }}
        run: |
          now --token ${NOW_TOKEN} --confirm --name flash-components --no-clipboard --prod
